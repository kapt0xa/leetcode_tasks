//
// https://leetcode.com/problems/add-two-numbers/
//

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    ListNode* Next(ListNode* node)
    {
        return node? node->next : nullptr;
    }
    int Val(ListNode* node)
    {
        return node? node->val : 0;
    }
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* result = reinterpret_cast<ListNode*>(operator new(sizeof(ListNode)));
        ListNode* current = result;
        bool shift = false;
        while(true)
        {
            int summ = Val(l1) + Val(l2) + shift;

            if(summ >= 10)
            {
                shift = true;
                summ -= 10;
            }
            else
            {
                shift = false;
            }
            l1 = Next(l1);
            l2 = Next(l2);
            
            current->val = summ;

            if(l1 || l2 || shift)
            {
                current->next = reinterpret_cast<ListNode*>(operator new(sizeof(ListNode)));
                current = Next(current);
            }
            else
            {
                current->next = nullptr;
                return result;
            }
        }
    }
};
